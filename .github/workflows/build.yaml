# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json

name: container-cicd-workflow

on: push

env:
  CONTAINER_REGISTRY: sbacrdemo.azurecr.io 
  IMAGE_NAME: ci-scanning-demo
  DOCKERFILE: Dockerfile_vulnerable

jobs:
  acr-cicd-workflow:
    runs-on: ubuntu-latest
    steps:
      ## Clone branch that triggered the build
      - name: git-checkout
        uses: actions/checkout@master

      ## Authenticate with the ACR instance using GitHub secrets
      - name: authenticate
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.CONTAINER_REGISTRY }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      
      ## Build The Docker Image
      - name: build
        run: |
          docker build -t ${{ env.CONTAINER_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.run_number }}-${{ github.sha }} . -f ${{ env.DOCKERFILE }}

      ## Scan the Docker Image
      - name: secure
        uses: Azure/container-scan@v0
        id: container-scan
        continue-on-error: true
        with:
          image-name: ${{ env.CONTAINER_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.run_number }}-${{ github.sha }}

      ## Publish the Docker Images
      - name: publish
        run: |
          docker push ${{ env.CONTAINER_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.run_number }}-${{ github.sha }}

      ## Publish Telemetry to App Insights
      - name: telemetry
        uses: Azure/publish-security-assessments@v0
        with: 
          scan-results-path: ${{ steps.container-scan.outputs.scan-report-path }}
          connection-string: ${{ secrets.AZ_APPINSIGHTS_CONNECTION_STRING }}
          subscription-token: ${{ secrets.AZ_SUBSCRIPTION_TOKEN }} 
